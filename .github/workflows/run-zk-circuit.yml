name: Run ZK Circuit Proof Generation

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Install dependencies
      - name: Install Node.js and SnarkJS
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install SnarkJS globally
        run: npm install -g snarkjs

      # Install Circom
      - name: Install Circom
        run: |
          sudo apt update
          sudo apt install -y cargo
          git clone https://github.com/iden3/circom.git
          cd circom
          cargo build --release
          sudo ln -s $(pwd)/target/release/circom /usr/local/bin/circom

      # Compile the circuit
      - name: Compile Circuit
        run: circom Equation.circom --r1cs --wasm --sym

      # Set up trusted setup (download pre-existing ptau file)
      - name: Download Powers of Tau File
        run: wget https://hermez.s3-eu-west-1.amazonaws.com/powersOfTau28_hez_final_12.ptau -O pot12_final.ptau

      - name: Perform Trusted Setup
        run: |
          snarkjs groth16 setup Equation.r1cs pot12_final.ptau Equation_0000.zkey
          snarkjs zkey contribute Equation_0000.zkey Equation_final.zkey --name="First contribution" -v

      # Export verification key
      - name: Export Verification Key
        run: snarkjs zkey export verificationkey Equation_final.zkey verification_key.json

      # Generate the witness
      - name: Generate Witness
        run: |
          node Equation_js/generate_witness.js Equation_js/Equation.wasm input.json witness.wtns

      # Generate the proof
      - name: Generate Proof
        run: snarkjs groth16 prove Equation_final.zkey witness.wtns proof.json public.json

      # Verify the proof
      - name: Verify Proof
        run: snarkjs groth16 verify verification_key.json public.json proof.json
